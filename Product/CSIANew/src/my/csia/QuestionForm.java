/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package my.csia;

import java.util.ArrayList;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.JLabel;
import javax.swing.ButtonGroup;
import javax.swing.JFrame;
import javax.swing.JRadioButton;
import javax.swing.JButton;
import javax.swing.JTextField;
import java.awt.Dimension;
import java.awt.Toolkit;
// import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;

/**
 *
 * @author student
 */
// presents users with questions, allows them to input answers, and keeps track of their statistics

public class QuestionForm extends javax.swing.JFrame {

    /**
     * Creates new form ml1
     */
    private Question q = new Question();
    private String text;
    private String answer = q.getCorrectAnswer();
    private ArrayList<Question> questions = new ArrayList<Question>();
    private int currentQuestionIndex;
    private char selectedAnswer;
    private String fileName;
    private Home gui = new Home();
    private char a;
    private ScoreCounter scoreCounter = new ScoreCounter();
    private LevelCounter levelCounter = new LevelCounter();
    private RightCounter rightCounter = new RightCounter();
    private WrongCounter wrongCounter = new WrongCounter();
    private QuestionGenerator generator = new QuestionGenerator();
    private int count;
    private String topic;
    private String sTopic;
    private int i;
    private static boolean complete;
    private static int z;
    private static int rz;
    private ButtonGroup myButtonGroup;
    private String file;
    
    private String pCorrect;
    private String pWrong;
    private String pScore;
    private String pLevel;
    private String pTopic;
    private String pQuestionNumber;
    
    // constructor of QuestionForm() class
    public QuestionForm() 
    {
        initComponents();
        setResizable(false);
        currentQuestionIndex = 0;
        fileName = "";
        a = 0;
        count = 0;
        topic = "";
        sTopic = "";
        i = 1;
        complete = false;
        z = 1;
        rz = 0; 
        file = "";
        pCorrect = "";
        pWrong = "";
        pScore = "";
        pLevel = "";
        pTopic = "";
        pQuestionNumber = "";
        Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize();
        setSize((int)dimension.getWidth(), (int)dimension.getHeight());
        myButtonGroup = new ButtonGroup();
        //setResizable(false);
    }
    
    // method to exit the program
    public void close() 
    {
        WindowEvent winClosingEvent = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winClosingEvent);
    }
    
    // mutator method of variable a
    public void setA(char a)
    {
        this.a = a;
    } 
    
    // accessor method of variable a
    public char getA()
    {
        return a;
    }
    
    // sets the topic of a question
    public void setSTopic(String sTopic)
    {
        this.sTopic = sTopic;
    }
    
    // returns the topic of a question
    public String getSTopic()
    {
        return sTopic;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jDialog2 = new javax.swing.JDialog();
        jDialog3 = new javax.swing.JDialog();
        jDialog4 = new javax.swing.JDialog();
        jFrame1 = new javax.swing.JFrame();
        jDialog5 = new javax.swing.JDialog();
        jDialog6 = new javax.swing.JDialog();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton3 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog2Layout = new javax.swing.GroupLayout(jDialog2.getContentPane());
        jDialog2.getContentPane().setLayout(jDialog2Layout);
        jDialog2Layout.setHorizontalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog2Layout.setVerticalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog3Layout = new javax.swing.GroupLayout(jDialog3.getContentPane());
        jDialog3.getContentPane().setLayout(jDialog3Layout);
        jDialog3Layout.setHorizontalGroup(
            jDialog3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog3Layout.setVerticalGroup(
            jDialog3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog4Layout = new javax.swing.GroupLayout(jDialog4.getContentPane());
        jDialog4.getContentPane().setLayout(jDialog4Layout);
        jDialog4Layout.setHorizontalGroup(
            jDialog4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog4Layout.setVerticalGroup(
            jDialog4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog5Layout = new javax.swing.GroupLayout(jDialog5.getContentPane());
        jDialog5.getContentPane().setLayout(jDialog5Layout);
        jDialog5Layout.setHorizontalGroup(
            jDialog5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog5Layout.setVerticalGroup(
            jDialog5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog6Layout = new javax.swing.GroupLayout(jDialog6.getContentPane());
        jDialog6.getContentPane().setLayout(jDialog6Layout);
        jDialog6Layout.setHorizontalGroup(
            jDialog6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog6Layout.setVerticalGroup(
            jDialog6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jLabel11.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel11.setText("Question Credits: IBDP Physics Higher Level Paper 1 2014-2017; Grade Gorilla IB Physics Questions ");

        jLabel12.setText("All copyrighted materials belong to their respective copyright owners.");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1400, 1000));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 51)); // NOI18N
        jLabel1.setText("Practice Question:");

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jLabel2.setText("Correct:");

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jLabel3.setText("Wrong:");

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jLabel4.setText("Score:");

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jLabel5.setText("Level:");

        jRadioButton1.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jRadioButton2.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jRadioButton3.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        jRadioButton4.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jRadioButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton4ActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jButton1.setText("Home");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextField1.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jTextField1.setText("0");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jTextField2.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jTextField2.setText("0");

        jTextField3.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jTextField3.setText("0");
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jTextField4.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jTextField4.setText("1");
        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jButton2.setText("Exit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton3.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jButton3.setText("Submit Answer");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 1, 51)); // NOI18N
        jLabel6.setText("IB Physics Question Bank");
        jLabel6.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 2, 12)); // NOI18N
        jLabel7.setText("Question Sources: IBDP Physics Higher Level Examination Paper 1&2 2014-2017; Oxford IB Diploma Programme Physics Course Companion by Homer, David, and Michael Brown-Jones;");

        jLabel8.setFont(new java.awt.Font("Lucida Grande", 2, 12)); // NOI18N
        jLabel8.setText("All copyrighted materials belong to their respective copyright owners. This application and its users agree to abide by the rules and policy for use of IB and Grade Gorilla intellectual property. ");

        jLabel9.setFont(new java.awt.Font("Lucida Grande", 2, 12)); // NOI18N
        jLabel9.setText("Physics for the IB Diploma ​by K. A. Tsokos; and Grade Gorilla IB Physics Questions. This application is to be used for educational purposes only. ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField2))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField3)
                                    .addComponent(jTextField4))))
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1)
                                .addGap(31, 31, 31)
                                .addComponent(jButton2))
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jRadioButton2)
                                    .addComponent(jRadioButton3)
                                    .addComponent(jRadioButton4)
                                    .addComponent(jRadioButton1)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 669, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 614, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(103, 103, 103))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel8))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel1)))
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jRadioButton1)
                .addGap(26, 26, 26)
                .addComponent(jRadioButton2)
                .addGap(27, 27, 27)
                .addComponent(jRadioButton3)
                .addGap(27, 27, 27)
                .addComponent(jRadioButton4)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(50, 50, 50)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed

    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // returns to home page
        Home home = new Home();
        home.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed

    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // persistence: stores the number of questions answered correctly, incorreclty, score, level, and question topic of the last question before exiting onto a text file
        fileName = "User Progress.txt";
        try
        {
            File progress = new File(fileName);
            FileWriter fileWriter = new FileWriter(progress);
            fileWriter.write(rightCounter.getNoRight() + "\n" + wrongCounter.getNoWrong()+ "\n" + scoreCounter.getScore() + "\n" + levelCounter.getLevel() + "\n" +  sTopic  + "\n" + z + "\n" + "r");
            fileWriter.close();
        }
        catch (IOException e) {
            new RuntimeException("Error message", e).printStackTrace();
        }
        close(); 
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed

    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed

    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton4ActionPerformed
 
    }//GEN-LAST:event_jRadioButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // caputres answer choice chosen by user and checks the answer of a question 
        if (jRadioButton1.isSelected())
        {
            myButtonGroup.clearSelection();
            jButton3.setSelected(false);
            checkAnswer('A');
        }
        
        else if (jRadioButton2.isSelected())
        {
            myButtonGroup.clearSelection();
            jButton3.setSelected(false);
            checkAnswer('B');
        }
        
        else if (jRadioButton3.isSelected())
        {
            myButtonGroup.clearSelection();
            jButton3.setSelected(false);
            checkAnswer('C');
        }
        
        else if (jRadioButton4.isSelected())
        {
            myButtonGroup.clearSelection();
            jButton3.setSelected(false);
            checkAnswer('D');
        }
        
        else
        {
            
        }

    }//GEN-LAST:event_jButton3ActionPerformed
  
    public boolean complete()
    {
        return complete;
    }
    
    public void setCount(int count)
    {
        this.count = count;
    }
    
    public int getCount()
    {
        return count;
    }
    
    // persistence: reads the user statistics stored in text file to retrieve user progress and set up subsequent questions
    public void getCounters()
    {
        try
        {
            FileReader fileReader = new FileReader("User Progress.txt");
            BufferedReader bufferedReader = new BufferedReader(fileReader);
            StringBuilder numberCorrect = new StringBuilder();
            StringBuilder numberWrong = new StringBuilder();
            StringBuilder score = new StringBuilder();
            StringBuilder level = new StringBuilder();
            StringBuilder topic = new StringBuilder();
            StringBuilder questionNumber = new StringBuilder();
            StringBuilder capture = new StringBuilder();
            String line;
            
            if ((line = bufferedReader.readLine()) != null)
            {
                pCorrect = numberCorrect.append(line).toString();
            }
            
            if ((line = bufferedReader.readLine()) != null)
            {
                pWrong = numberWrong.append(line).toString();
            }
            
            if ((line = bufferedReader.readLine()) != null)
            {
                pScore = score.append(line).toString();
            }
            
            if ((line = bufferedReader.readLine()) != null)
            {
                pLevel = level.append(line).toString();
            }
            
            if ((line = bufferedReader.readLine()) != null)
            {
                pTopic = topic.append(line).toString();
            }
            
            if ((line = bufferedReader.readLine()) != null)
            { 
                pQuestionNumber = questionNumber.append(line).toString();
            }
           
        }
        // exception handling: FileNotFoundException and InputOutputException
        catch(FileNotFoundException ex) 
        {
            System.out.println("Sorry, unable to open file '" + "User Progress.txt" + "'");                
        }
        catch(IOException ex) 
        {
            System.out.println("Error reading file '" + "User Progress.txt" + "'"); 
        } 
    }
      
    // method to check whether user has answered a question correctly, and update the counters consequently
    public void checkAnswer(char i)
    {

        if(a == i)   
        {
            JOptionPane.showMessageDialog(null, "Correct! Click \"OK\" to proceed to the next question.", "Message", JOptionPane.INFORMATION_MESSAGE);
            if (Home.getRetrieve())
            {
                getCounters();
                rightCounter.increment(Integer.parseInt(pCorrect));
                rightCounter.increment();
                jTextField1.setText("" + rightCounter.getNoRight()); 
                wrongCounter.increment(Integer.parseInt(pWrong));
                jTextField2.setText("" + wrongCounter.getNoWrong());
                scoreCounter.increment(Integer.parseInt(pScore));
                scoreCounter.increment();
                jTextField3.setText("" + scoreCounter.getScore());
                if (Integer.parseInt(pLevel)!=1)
                {
                    levelCounter.increment(0); 
                }
                if((rightCounter.getNoRight()-1)%5 == 0 && rightCounter.getNoRight()!= 1)
                {
                    levelCounter.increment();
                }
                jTextField4.setText("" + levelCounter.getLevel()); 
            }
            else
            {
                scoreCounter.increment();
                rightCounter.increment();
                if((rightCounter.getNoRight()-1)%5 == 0 && rightCounter.getNoRight()!= 1)
                {
                    levelCounter.increment();
                }
                jTextField1.setText("" + rightCounter.getNoRight()); 
                jTextField2.setText("" + wrongCounter.getNoWrong());
                jTextField3.setText("" + scoreCounter.getScore());
                jTextField4.setText("" + levelCounter.getLevel());
            }
            if (rightCounter.getNoRight() == 15) 
            {
                ExitPage exitPage = new ExitPage();
                exitPage.setVisible(true);
                setVisible(false);
            }
            else if ((rightCounter.getNoRight() + wrongCounter.getNoWrong()) == 15)
            {
                SExitPage sExitPage = new SExitPage();
                sExitPage.setVisible(true);
                setVisible(false);
            }
            else
            {
                
            }

            if ((rightCounter.getNoRight() + wrongCounter.getNoWrong()) < 15)
            {
                if (Home.getRetrieve()==false) 
                {
                    Home.qSetUp(sTopic, z);
                    z = z + 1; 
                }
                
                else
                {
                    rz = Home.getGRZ();
                    Home.qSetUp(sTopic, rz); 
                    rz = rz + 1;
                    z = z + 3;
                    Home.setRetrieve();
                }
            }
        } 
        
        else
        {
            JOptionPane.showMessageDialog(null, "Incorrect! The correct answer is " + a + ". Click \"OK\" to proceed to the next question.", "Message", JOptionPane.INFORMATION_MESSAGE);
            if (Home.getRetrieve())
            {
                getCounters();
                rightCounter.setNoRight(Integer.parseInt(pCorrect));
                jTextField1.setText("" + rightCounter.getNoRight());
                wrongCounter.increment(Integer.parseInt(pWrong));
                wrongCounter.increment();
                jTextField2.setText("" + wrongCounter.getNoWrong());
                scoreCounter.increment(Integer.parseInt(pScore));
                jTextField3.setText("" + scoreCounter.getScore());
                if (Integer.parseInt(pLevel) != 1)
                {
                    levelCounter.increment(Integer.parseInt(pLevel)); 
                }
                jTextField4.setText("" + levelCounter.getLevel());    
            }
            
            else
            {
                wrongCounter.increment();
                jTextField1.setText("" + rightCounter.getNoRight());
                jTextField2.setText("" + wrongCounter.getNoWrong());
                jTextField3.setText("" + scoreCounter.getScore());
                jTextField4.setText("" + levelCounter.getLevel());
            }
            
            if (rightCounter.getNoRight() == 15) 
            {
                ExitPage exitPage = new ExitPage();
                exitPage.setVisible(true);
                setVisible(false);
            }
            else if ((rightCounter.getNoRight() + wrongCounter.getNoWrong()) == 15)
            {
                SExitPage sExitPage = new SExitPage();
                sExitPage.setVisible(true);
                setVisible(false);
            }
            else
            {
                
            }
            if ((rightCounter.getNoRight() + wrongCounter.getNoWrong()) < 15)
            {
                if (Home.getRetrieve()==false) 
                {
                    Home.qSetUp(sTopic, z); 
                    z = z + 1;
                }
                
                else
                {
                    rz = Home.getGRZ();
                    Home.qSetUp(sTopic, rz); 
                    rz = rz + 1;
                    z = z + 3;
                    Home.setRetrieve();
                }
            }
        }
    }
    
    // returns jTextArea1
    public JTextArea getTextArea()
    {
        return jTextArea1;
    }
    
    // returns jRadioButton1
    public JRadioButton getb1()
    {
        return jRadioButton1;
    }
    
    // returns jRadioButton2
    public JRadioButton getb2()
    {
        return jRadioButton2;
    }
    
    // returns jRadioButton3
    public JRadioButton getb3()
    {
        return jRadioButton3;
    }
    
    // returns jRadioButton4
    public JRadioButton getb4()
    {
        return jRadioButton4;
    }
    
    // returns jButton3
    public JButton getSA()
    {
        return jButton3;
    }
    
    // returns jTextField1
    public JTextField getJ1()
    {
        return jTextField1;
    }
    
    // returns jTextField2
    public JTextField getJ2()
    {
        return jTextField2;
    }
    
    // returns jTextField3
    public JTextField getJ3()
    {
        return jTextField3;
    }
    
    // returns jTextField4
    public JTextField getJ4()
    {
        return jTextField4;
    }
    
    // returns jTextArea1
    public JTextArea getA1()
    {
        return jTextArea1;
    }
    
    // make the answer option JRadioButtons uneditable
    public void setUneditable()
    {
        jTextField1.setEditable(false);
        jTextField2.setEditable(false);
        jTextField3.setEditable(false);
        jTextField4.setEditable(false);
        jTextArea1.setEditable(false);
    }
    
    // group the four answer option JRadiobuttons so that only 1 can be selected at a time
    public void groupButtons()
    {
        myButtonGroup.add(jRadioButton1);
        myButtonGroup.add(jRadioButton2);
        myButtonGroup.add(jRadioButton3);
        myButtonGroup.add(jRadioButton4);
    }
    
    public void wrap()
    {
        jTextArea1.setLineWrap(true);  // wraps the lines of the question text if it becomes too long
        jTextArea1.setWrapStyleWord(true); // wraps the questions text at word boundaries (instead of character boundaries)
    }
    
    // returns question of specified topic and question number
    public String getQuestionsText(String topic, int questionNumber)
    {
        QuestionGenerator gen = new QuestionGenerator();
        this.topic = topic;
         
        if (topic.equalsIgnoreCase("m"))
        {
            return gen.getAllMQuestions().get(questionNumber).getText();
        }
        else if (topic.equalsIgnoreCase("k"))
        {
            return gen.getAllKQuestions().get(questionNumber).getText();
        }
        else if (topic.equalsIgnoreCase("w"))
        {
            return gen.getAllWQuestions().get(questionNumber).getText();
        }
        else if (topic.equalsIgnoreCase("c"))
        {
            return gen.getAllCQuestions().get(questionNumber).getText();
        }
        else if (topic.equalsIgnoreCase("em"))
        {
            return gen.getAllEMQuestions().get(questionNumber).getText();
        }
        else if (topic.equalsIgnoreCase("t"))
        {
            return gen.getAllTQuestions().get(questionNumber).getText();
        }
        else
        {
            return "";
        } 
    }
    
    // returns the question file of a specified topic
    public String getFile(String topic)
    {
        if (topic.equals("mu"))
        {
            return "measurement and uncertainties.txt";
        }
        
        //returns an answer option of a question from the waves topic
        else if (topic.equals("k"))
        {
            return "kinematics.txt";
        }
        
        //returns an answer option of a question from the mechanics topic
        else if (topic.equals("w"))
        {
            return "waves and shm.txt";
        }
        
        //returns an answer option of a question from the circular motion topic
        else if (topic.equals("c"))
        {
            return "circular motion.txt";
        }
        
        //returns an answer option of a question from the electricity and magnetism topic
        else if (topic.equals("em"))
        {
            return "electricity and magnetism.txt";
        }
        
        //returns an answer option of a question from the thermal physics topic
        else if (topic.equals("t"))
        {
            return "thermal physics.txt";
        }
        
        else
        {
            return "";
        }
    }     
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuestionForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuestionForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuestionForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuestionForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuestionForm().setVisible(true);
                QuestionGenerator qg = new QuestionGenerator();
                qg.storeQuestion();
                //jTextArea1.setText(qg.getQuestionText("mn",0));
                //qf.storeQuestion();
                //qf.appendQuestion();

                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JDialog jDialog3;
    private javax.swing.JDialog jDialog4;
    private javax.swing.JDialog jDialog5;
    private javax.swing.JDialog jDialog6;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables
}
